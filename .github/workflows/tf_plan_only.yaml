name: 'Terraform Azure Plan Only'
 
on: 
  workflow_dispatch:
 
jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
    environment: production
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: "./tf_azure"
    steps:
    # Checkout the repository to the GitHub Actions runner
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1

    - name: 'Terraform Format'
      id: fmt
      run: terraform fmt -check
      continue-on-error: false

         
    # - name: 'Terraform Init'
    #   uses: hashicorp/terraform-github-actions@master
    #   with:
    #     tf_actions_version: 0.14.8
    #     tf_actions_subcommand: 'init'
    #     tf_actions_working_dir: "./tf_azure"
    #     args: '-var-file="env.tfvars"'
 
    # - name: 'Terraform Validate'
    #   uses: hashicorp/terraform-github-actions@master
    #   with:
    #     tf_actions_version: 0.14.8
    #     tf_actions_subcommand: 'validate'
    #     tf_actions_working_dir: "./tf_azure"
    #     args: '-var-file="env.tfvars"'
         
    # - name: 'Terraform Plan'
    #   uses: hashicorp/terraform-github-actions@master
    #   with:
    #     tf_actions_version: 0.14.8
    #     tf_actions_subcommand: 'plan'
    #     tf_actions_working_dir: "./tf_azure"
    #     args: '-var-file="env.tfvars"'
